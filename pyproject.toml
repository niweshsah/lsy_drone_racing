[build-system]
requires = ["setuptools>=61.0.0", "wheel", "numpy>=2.0.0"]
build-backend = "setuptools.build_meta"

[project]
name = "lsy_drone_racing"
version = "0.0.1"
description = "LSY Autonomous Drone Racing Project Course"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
]


########################
# Pip Dependencies
########################
dependencies = [
    "fire >= 0.6.0",
    "numpy",
    "toml >= 0.10.2",
]

[project.optional-dependencies]
# option[sim]: basic simulation
sim = [
    "gymnasium[array-api] >= 1.2.0",
    "ml-collections >= 1.0",
    "packaging >= 24.0",
    "drone-models @ git+https://github.com/utiasDSL/drone-models.git@fda7804",
    "drone-controllers @ git+https://github.com/utiasDSL/drone-controllers.git",
    "crazyflow @ git+https://github.com/utiasDSL/crazyflow.git@adr_ws25", # TODO: change this after merged to main
    "jax >= 0.7",
    "warp-lang",
]
# option[gpu]: simulation with gpu
gpu = [
    "jax[cuda12]",
]
# option[deploy]: deploy to real drones
deploy = [
    "cfclient", 
    "drone-estimators @ git+https://github.com/utiasDSL/drone-estimators.git",
]
# option[rl]: train rl policy
rl = [
    "torch == 2.8.0",
    "wandb",
]

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
lsy_drone_racing = ["envs/assets/*.xml"]

[tool.pytest.ini_options]
markers = ["unit", "integration"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".git",
    ".git-rewrite",
    ".ipynb_checkpoints",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
    "venv",
    "docs/conf.py",
]

line-length = 100
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "I", "D", "TCH", "ANN"]
ignore = ["ANN401"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"benchmarks/*" = ["D100", "D103"]
"tests/*" = ["D100", "D103", "D104"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"

########################
# Pixi Sessions
########################

[tool.pixi.workspace]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-dependencies]
lsy_drone_racing = { path = ".", editable = true }

# feature[jazzy]
[tool.pixi.feature.jazzy]
channels = ["https://prefix.dev/robostack-jazzy"]

[tool.pixi.feature.jazzy.dependencies]
ros-jazzy-desktop = "*"
colcon-common-extensions = "*"
rosdep = "*"

[tool.pixi.feature.jazzy.activation]
scripts = ["tools/setup_mocap.sh"]

[tool.pixi.activation]
scripts = ["tools/setup_acados.sh"]

# feature[online-submission]
# [tool.pixi.feature.online-submission]

[tool.pixi.feature.online-submission.tasks]
create-submission = { cmd = "python scripts/kaggle.py", description = "Create online submission" }
export-submission = { cmd = "kaggle competitions submit -c lsy-drone-racing-ws-25 -f submission.csv -m 'Automated submission'", description = "Submit online submission" }

[tool.pixi.feature.online-submission.dependencies]
pandas = "*"
kaggle = "*"

# feature[tests]
[tool.pixi.feature.tests.tasks]
tests = { cmd = "pytest -v tests", description = "Run tests" }

[tool.pixi.feature.tests.dependencies]
pytest = "*"

# environments
[tool.pixi.environments]
default = { features = ["sim"], solve-group = "default" }
deploy = { features = ["jazzy"] } # for deploy we must install everything else with pip
gpu = { features = ["sim", "gpu"], solve-group = "default" }
online-submission = { features = ["sim", "online-submission"], solve-group = "default" }
tests = { features = ["sim", "rl", "tests"], solve-group = "default" }
gpu-tests = { features = ["sim", "gpu", "tests"], solve-group = "default" }

[tool.pixi.dependencies]
# TODO: Remove compilers once scipy 1.17 is released and drone-models have been updated.
# gcc = ">=15.1.0,<15.2"
# cxx-compiler = ">=1.0.0,<2"
# gfortran = ">=15.1.0,<15.2"
# pkg-config = "*"
# ninja = "*"
# rosbags = ">=0.10.9,<0.11"
openblas = ">=0.3.30,<0.4"
ruff = "*"
python = ">=3.11.12,<3.14"
pip = ">=25.0.1,<26"
cmake = "*"
compilers = ">=1.9.0, <1.11.0"
make = "*"
